[package]
authors = ["OpenMLS Authors"]
description = "This is a WIP Rust implementation of the Messaging Layer Security (MLS) protocol based on draft 12+."
documentation = "https://openmls.github.io/openmls/"
edition = "2021"
license = "MIT"
name = "openmls"
readme = "../README.md"
repository = "https://github.com/openmls/openmls/"
version = "0.4.1"

[dependencies]
log = {version = "0.4", features = ["std"]}
openmls_traits = {version = "0.1.0", path = "../traits"}
serde = {version = "^1.0", features = ["derive"]}
serde_json = "^1.0"
tls_codec = {version = "0.2.0", features = ["derive", "serde_serialize", "mls"]}
typetag = "0.2"
uuid = {version = "1.0", features = ["v4"]}
# Only required for tests.
rand = {version = "0.8", optional = true}
# The js feature is required for wasm.
# We enable the feature here because other dependencies need getrandom.
getrandom = {version = "0.2", features = ["js"]}
# Crypto backends required for KAT and testing - "test-utils" feature
backtrace = "0.3"
itertools = {version = "0.10", optional = true}
openmls_evercrypt = {version = "0.1.0", path = "../evercrypt_backend", optional = true}
openmls_rust_crypto = {version = "0.1.0", path = "../openmls_rust_crypto", optional = true}
rayon = "^1.5.0"
rstest = {version = "^0.15", optional = true}
rstest_reuse = {version = "0.4", optional = true}
thiserror = "^1.0"

[features]
content-debug = [] # ☣️ Enable logging of sensitive message content
crypto-debug = [] # ☣️ Enable logging of sensitive cryptographic information
crypto-subtle = [] # Enable subtle crypto APIs that have to be used with care.
default = []
evercrypt = ["openmls_evercrypt"] # Evercrypt needs to be enabled individually
test-utils = ["itertools", "openmls_rust_crypto", "rand", "rstest", "rstest_reuse"]

[dev-dependencies]
backtrace = "0.3"
criterion = "^0.4"
itertools = "0.10"
lazy_static = "1.4"
openmls = {path = ".", features = ["test-utils"]}
pretty_env_logger = "0.4"
rstest = "^0.15"
rstest_reuse = "0.4"
tempfile = "3"

# x64 targets get evercrypt compiled into dev-dependencies.
[target.'cfg(target_arch = "x86_64")'.dev-dependencies.openmls]
features = ["test-utils", "evercrypt"]
path = "."

[[bench]]
harness = false
name = "benchmark"

# Patching unreleased crates
# [patch.crates-io]
# tls_codec = {git = "https://github.com/RustCrypto/formats.git", features = ["derive", "serde_serialize", "mls"]}

[patch.crates-io.tls_codec]
git = "https://github.com/RustCrypto/formats.git"
